---
version: '3'

services:

  postgres:
    image: postgres:${DB_VERSION}
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  elastic:
    image: elasticsearch:${SINK_VERSION}
    ports:
      - "${SINK_PORT}:9200"
    environment:
      SINK_PASSWORD: ${SINK_PASSWORD}
      discovery.type: single-node
      xpack.security.enabled: false

  kafka:
    image: bitnami/kafka:${KAFKA_VERSION}
    ports:
      - "${KAFKA_EXTERNAL_PORT}:9094"
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: PLAINTEXT://:${KAFKA_INTERNAL_PORT},CONTROLLER://:${KAFKA_CONTROLLER_PORT},EXTERNAL://:${KAFKA_EXTERNAL_PORT}
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_INTERNAL_HOST}:${KAFKA_INTERNAL_PORT},EXTERNAL://${KAFKA_EXTERNAL_HOST}:${KAFKA_EXTERNAL_PORT}
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

  schema-registry:
    image: bitnami/schema-registry:${SCHEMA_REGISTRY_VERSION}
    ports:
      - '${SCHEMA_REGISTRY_PORT}:8081'
    depends_on:
      - kafka
    environment:
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:${SCHEMA_REGISTRY_PORT}
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://${KAFKA_INTERNAL_HOST}:${KAFKA_INTERNAL_PORT}

  connect:
    image: confluentinc/cp-kafka-connect-base:${KAFKA_CONNECT_VERSION}
    depends_on:
      - kafka
      - postgres
    ports:
      - "${KAFKA_CONNECT_PORT}:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: ${KAFKA_INTERNAL_HOST}:${KAFKA_INTERNAL_PORT}
      CONNECT_REST_PORT: ${KAFKA_CONNECT_PORT}
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      # CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt debezium/debezium-connector-postgresql:${DEBEZIUM_POSTGRES_VERSION}
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:${ELASTICSEARCH_CONNECTOR_VERSION}
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
