-- Default tokenizer
CALL paradedb.create_bm25(
	index_name => 'tokenizer_config',
	table_name => 'tokenizer_config',
	schema_name => 'paradedb',
	key_field => 'id',
	text_fields => '{"description": {}}'
);
NOTICE:  schema "tokenizer_config" does not exist, skipping
NOTICE:  index "tokenizer_config_bm25_index" does not exist, skipping
SELECT * FROM tokenizer_config.search('description:earbud');
 id | description | rating | category | in_stock | metadata 
----+-------------+--------+----------+----------+----------
(0 rows)

CALL paradedb.drop_bm25('tokenizer_config');
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to function tokenizer_config.search(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.highlight(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank_hybrid(text,text,integer,integer,real,real)
-- en_stem
CALL paradedb.create_bm25(
	index_name => 'tokenizer_config',
	table_name => 'tokenizer_config',
	schema_name => 'paradedb',
	key_field => 'id',
	text_fields => '{"description": {"tokenizer": { "type": "en_stem" }}}'
);
NOTICE:  schema "tokenizer_config" does not exist, skipping
NOTICE:  index "tokenizer_config_bm25_index" does not exist, skipping
SELECT * FROM tokenizer_config.search('description:earbud');
 id |         description         | rating |  category   | in_stock |                metadata                 
----+-----------------------------+--------+-------------+----------+-----------------------------------------
 12 | Innovative wireless earbuds |      5 | Electronics | t        | {"color": "Black", "location": "China"}
(1 row)

CALL paradedb.drop_bm25('tokenizer_config');
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to function tokenizer_config.search(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.highlight(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank_hybrid(text,text,integer,integer,real,real)
-- ngram
CALL paradedb.create_bm25(
	index_name => 'tokenizer_config',
	table_name => 'tokenizer_config',
	schema_name => 'paradedb',
	key_field => 'id',
	text_fields => '{"description": {"tokenizer": {"type": "ngram", "min_gram": 3, "max_gram": 8, "prefix_only": false}}}'
);
NOTICE:  schema "tokenizer_config" does not exist, skipping
NOTICE:  index "tokenizer_config_bm25_index" does not exist, skipping
SELECT * FROM tokenizer_config.search('description:boa');
 id |       description        | rating |  category   | in_stock |                     metadata                     
----+--------------------------+--------+-------------+----------+--------------------------------------------------
  1 | Ergonomic metal keyboard |      4 | Electronics | t        | {"color": "Silver", "location": "United States"}
  2 | Plastic Keyboard         |      4 | Electronics | f        | {"color": "Black", "location": "Canada"}
 20 | Interactive board game   |      3 | Toys        | t        | {"color": "Multicolor", "location": "Canada"}
(3 rows)

CALL paradedb.drop_bm25('tokenizer_config');
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to function tokenizer_config.search(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.highlight(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank_hybrid(text,text,integer,integer,real,real)
-- chinese_compatible
CALL paradedb.create_bm25(
	index_name => 'tokenizer_config',
	table_name => 'tokenizer_config',
	schema_name => 'paradedb',
	key_field => 'id',
	text_fields => '{"description": {"tokenizer": {"type": "chinese_compatible"}, "record": "position"}}'
);
NOTICE:  schema "tokenizer_config" does not exist, skipping
NOTICE:  index "tokenizer_config_bm25_index" does not exist, skipping
INSERT INTO tokenizer_config (description, rating, category) VALUES ('电脑', 4, 'Electronics');
SELECT * FROM tokenizer_config.search('description:电脑');
 id | description | rating |  category   | in_stock | metadata 
----+-------------+--------+-------------+----------+----------
 42 | 电脑        |      4 | Electronics |          | 
(1 row)

CALL paradedb.drop_bm25('tokenizer_config');
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to function tokenizer_config.search(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.highlight(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank(text,integer,integer,text,integer,boolean,text,text,integer,text)
drop cascades to function tokenizer_config.rank_hybrid(text,text,integer,integer,real,real)
