-- this is needed to ensure consistency of printouts with postgres versions older than 12. Can be
-- deleted if we drop support for postgres 11.
ALTER SYSTEM SET extra_float_digits TO 0;
select pg_reload_conf();
 pg_reload_conf 
----------------
 t
(1 row)

CREATE INDEX idx_mock_items ON mock_items USING bm25 ((mock_items.*));
CREATE INDEX ON mock_items USING hnsw (embedding vector_l2_ops);
-- Hybrid search with equal weights
SELECT
    description,
    category,
    rating,
    embedding,
    paradedb.weighted_mean(
        paradedb.minmax_bm25(ctid, 'idx_mock_items', 'description:keyboard'),
        1 - paradedb.minmax_norm(
          '[1,2,3]' <-> embedding, 
          MIN('[1,2,3]' <-> embedding) OVER (), 
          MAX('[1,2,3]' <-> embedding) OVER ()
        ),
        ARRAY[0.5,0.5]
    ) as score_hybrid
FROM mock_items
ORDER BY score_hybrid DESC
LIMIT 5;
       description        |  category   | rating | embedding |   score_hybrid    
--------------------------+-------------+--------+-----------+-------------------
 Ergonomic metal keyboard | Electronics |      4 | [3,4,5]   | 0.788961044379643
 Plastic Keyboard         | Electronics |      4 | [4,5,6]   | 0.785714285714286
 Artistic ceramic vase    | Home Decor  |      4 | [1,2,3]   |               0.5
 Modern wall clock        | Home Decor  |      4 | [1,2,3]   |               0.5
 Designer wall paintings  | Home Decor  |      5 | [1,2,3]   |               0.5
(5 rows)

-- All weighted on BM25
SELECT
    description,
    category,
    rating,
    embedding,
    paradedb.weighted_mean(
        paradedb.minmax_bm25(ctid, 'idx_mock_items', 'description:keyboard'),
        1 - paradedb.minmax_norm(
          '[1,2,3]' <-> embedding, 
          MIN('[1,2,3]' <-> embedding) OVER (), 
          MAX('[1,2,3]' <-> embedding) OVER ()
        ),
        ARRAY[1,0]
    ) as score_hybrid
FROM mock_items
ORDER BY score_hybrid DESC
LIMIT 5;
       description        |  category   | rating | embedding |   score_hybrid    
--------------------------+-------------+--------+-----------+-------------------
 Plastic Keyboard         | Electronics |      4 | [4,5,6]   |                 1
 Ergonomic metal keyboard | Electronics |      4 | [3,4,5]   | 0.863636374473572
 White jogging shoes      | Footwear    |      3 | [6,7,8]   |                 0
 Generic shoes            | Footwear    |      4 | [7,8,9]   |                 0
 Sleek running shoes      | Footwear    |      5 | [5,6,7]   |                 0
(5 rows)

-- All weighted on HNSW
SELECT
    description,
    category,
    rating,
    embedding,
    paradedb.weighted_mean(
        paradedb.minmax_bm25(ctid, 'idx_mock_items', 'description:keyboard'),
        1 - paradedb.minmax_norm(
          '[1,2,3]' <-> embedding, 
          MIN('[1,2,3]' <-> embedding) OVER (), 
          MAX('[1,2,3]' <-> embedding) OVER ()
        ),
        ARRAY[0,1]
    ) as score_hybrid
FROM mock_items
ORDER BY score_hybrid DESC
LIMIT 5;
       description        |  category  | rating | embedding |   score_hybrid    
--------------------------+------------+--------+-----------+-------------------
 Designer wall paintings  | Home Decor |      5 | [1,2,3]   |                 1
 Handcrafted wooden frame | Home Decor |      5 | [1,2,3]   |                 1
 Artistic ceramic vase    | Home Decor |      4 | [1,2,3]   |                 1
 Modern wall clock        | Home Decor |      4 | [1,2,3]   |                 1
 Interactive board game   | Toys       |      3 | [2,3,4]   | 0.857142857142857
(5 rows)

