# workflows/test-paradedb.yml
#
# Test ParadeDB
# Test building the ParadeDB Docker Image using Docker Compose. We use a depot-ubuntu-22.04-4
# runner for faster builds and to avoid running out of storage on the runner.

name: Test ParadeDB

on:
  pull_request:
    branches:
      - main
      - staging
      - dev
    paths:
      - "docker/**"
      - "pg_lakehouse/src/**"
      - "pg_search/src/**"
      - "shared/**"
      - "tokenizers/**"
      - ".github/workflows/test-paradedb.yml"
  workflow_dispatch:

concurrency:
  group: test-paradedb-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-paradedb:
    name: Test ParadeDB on PostgreSQL ${{ matrix.pg_version }}
    runs-on: depot-ubuntu-22.04-4
    strategy:
      matrix:
        pg_version: [16]

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      # By using the docker-compose.dev.yml file, we also test that the build arguments are correct
      - name: Build the ParadeDB Docker Image
        working-directory: docker/
        run: docker buildx create --use && docker compose -f docker-compose.dev.yml build

      # Sleep 10 seconds to give time for Postgres to start inside the container
      - name: Start the ParadeDB Docker Image
        working-directory: docker/
        run: docker compose -f docker-compose.dev.yml up -d && sleep 10

      # We run the container in detached mode, and grep for the word ERROR to see if it failed to start correctly
      - name: Check for Errors in the ParadeDB Docker Image
        working-directory: docker/
        run: docker logs $(docker ps -q --filter "name=paradedb-dev") | grep -q ERROR || exit 0
