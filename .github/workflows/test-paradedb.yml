# workflows/test-paradedb.yml
#
# Test ParadeDB
# Test building the ParadeDB Docker Image using Docker Compose. We use a ubuntu-latest-m
# runner for faster builds and to avoid running out of storage on the runner.

name: Test ParadeDB

on:
  pull_request:
    branches:
      - main
      - staging
      - dev
    paths:
      - "docker/**"
      - ".github/workflows/test-paradedb.yml"
  workflow_dispatch:

concurrency:
  group: test-paradedb-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-paradedb:
    name: Test ParadeDB on PostgreSQL ${{ matrix.pg_version }}
    runs-on: ubuntu-latest-m # Size: 4-cores · 16 GB RAM · 150 GB SSD
    strategy:
      matrix:
        pg_version: [16]

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      # This is needed to access pg_regress
      - name: Install & Configure Supported PostgreSQL Version
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt-get update && sudo apt-get install -y postgresql-${{ matrix.pg_version }} postgresql-server-dev-${{ matrix.pg_version }}
          sudo chown -R $(whoami) /usr/share/postgresql/${{ matrix.pg_version }}/extension/ /usr/lib/postgresql/${{ matrix.pg_version }}/lib/ /var/lib/postgresql/${{ matrix.pg_version }}/
          echo "/usr/lib/postgresql/${{ matrix.pg_version }}/bin" >> $GITHUB_PATH

      # By using the docker-compose.dev.yml file, we also test that the build arguments are correct
      - name: Test Building ParadeDB Docker Image
        working-directory: docker/
        run: docker buildx create --use && docker compose -f docker-compose.dev.yml build

      # We run in detached mode to avoid blocking the workflow
      - name: Run ParadeDB Docker Image
        working-directory: docker/
        run: docker compose -f docker-compose.dev.yml up -d

      # Execute the ParadeDB quickstart tutorial, to test basic functionalities
      - name: Execute ParadeDB Quickstart Tutorial via pg_regress
        run: |
          # Sleep for 10 seconds to allow Postgres to start
          sleep 10

          # Run the quickstart tutorial via pg_regress
          /usr/lib/postgresql/${{ matrix.pg_version }}/lib/pgxs/src/test/regress/pg_regress --use-existing --dbname=mydatabase --host=localhost --port=5432 --username=myuser --pasword=mypassword --inputdir=.github/workflows/helpers/ --outputdir=.github/workflows/helpers/
