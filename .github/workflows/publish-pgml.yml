name: Tmp

on:
  push:
    branches:
      - phil/pgml
  workflow_dispatch:

concurrency:
  group: publish-pgml-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  publish-pgml:
    name: Publish pgml for PostgreSQL ${{ matrix.pg_version }} on ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    container:
      image: python:3.11-bookworm
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            pg_version: 15
            arch: amd64
          - runner: buildjet-4vcpu-ubuntu-2204-arm
            pg_version: 15
            arch: arm64

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
        with:
          repository: postgresml/postgresml
          ref: v2.7.8

      - name: Retrieve GitHub Tag Version
        id: version
        run: echo "version=2.7.10" >> $GITHUB_OUTPUT

      - name: Retrieve Arch
        id: arch
        run: |
          arch_val=$(uname -m)
          if [ "$arch_val" == "x86_64" ]; then
              mapped_arch="amd64"
          elif [ "$arch_val" == "aarch64" ]; then
              mapped_arch="arm64"
          else
              mapped_arch="$arch_val"
          fi
          echo "arch=$mapped_arch" >> $GITHUB_OUTPUT

      - name: Update Dependencies
        run: |
          apt-get update && apt-get install -y --no-install-recommends sudo curl wget gnupg2 ca-certificates jq lsb-release cmake make

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false

      - name: Install & Configure Supported PostgreSQL Version
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt-get update && sudo apt-get install -y postgresql-${{ matrix.pg_version }} postgresql-server-dev-${{ matrix.pg_version }}
          sudo chown -R $(whoami) /usr/share/postgresql/${{ matrix.pg_version }}/extension/ /usr/lib/postgresql/${{ matrix.pg_version }}/lib/
          echo "/usr/lib/postgresql/${{ matrix.pg_version }}/bin" >> $GITHUB_PATH

      - name: Install pgrx
        run: cargo install cargo-pgrx --version 0.9.8

      - name: Initialize pgrx for Current PostgreSQL Version
        working-directory: pgml-extension/
        run: cargo pgrx init --pg${{ matrix.pg_version }}=/usr/lib/postgresql/${{ matrix.pg_version }}/bin/pg_config

      - name: Update pgml schema to paradedb
        working-directory: pgml-extension/
        run: |
          sed -i "s/\(schema = \).*/\1'paradedb'/" pgml.control
          find . -type f -exec sed -i 's/pgml\./paradedb\./g' {} +

      # Install requirements for pgml
      - name: Install pgml Build Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
              checkinstall \
              bison \
              flex \
              libreadline-dev \
              libopenblas-dev

      - name: Package pgml Extension with pgrx
        working-directory: pgml-extension/
        run: |
          git config --global --add safe.directory /__w/paradedb/paradedb    
          git submodule update --init --recursive && RUSTFLAGS="-A warnings" cargo pgrx package

      - name: Create .deb Package
        working-directory: pgml-extension/
        run: |
          # Create installable package
          mkdir archive
          cp `find target/release -type f -name "pgml*"` archive
          package_dir=pgml-${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ steps.arch.outputs.arch }}-linux-gnu

          # Copy files into directory structure
          mkdir -p ${package_dir}/usr/lib/postgresql/lib
          mkdir -p ${package_dir}/var/lib/postgresql/extension
          cp archive/*.so ${package_dir}/usr/lib/postgresql/lib
          cp archive/*.control ${package_dir}/var/lib/postgresql/extension
          cp archive/*.sql ${package_dir}/var/lib/postgresql/extension

          # Symlinks to copy files into directory structure
          mkdir -p ${package_dir}/usr/lib/postgresql/${{ matrix.pg_version }}/lib
          mkdir -p ${package_dir}/usr/share/postgresql/${{ matrix.pg_version}}/extension
          cp archive/*.so ${package_dir}/usr/lib/postgresql/${{ matrix.pg_version }}/lib
          cp archive/*.control ${package_dir}/usr/share/postgresql/${{ matrix.pg_version }}/extension
          cp archive/*.sql ${package_dir}/usr/share/postgresql/${{ matrix.pg_version }}/extension

          # Create control file (package name cannot have underscore)
          mkdir -p ${package_dir}/DEBIAN
          touch ${package_dir}/DEBIAN/control
          deb_version=${{ steps.version.outputs.version }}
          CONTROL_FILE="${package_dir}/DEBIAN/control"
          echo 'Package: pgml' >> $CONTROL_FILE
          echo 'Version:' ${deb_version} >> $CONTROL_FILE
          echo 'Architecture: ${{ steps.arch.outputs.arch }}' >> $CONTROL_FILE
          echo 'Maintainer: PostgresML' >> $CONTROL_FILE
          echo 'Description: Generative AI and simple ML in PostgreSQL' >> $CONTROL_FILE

          # Create .deb package
          sudo chown -R root:root ${package_dir}
          sudo chmod -R 00755 ${package_dir}
          sudo dpkg-deb --build --root-owner-group ${package_dir}

      - name: Create GitHub Release for pgml
        uses: softprops/action-gh-release@v1
        with:
          repository: paradedb/third-party-pg_extensions
          tag_name: pgml-v${{ steps.version.outputs.version }}-${{ steps.arch.outputs.arch }}
          name: pgml ${{ steps.version.outputs.version }} ${{ steps.arch.outputs.arch }}
          body: Internal ParadeDB Release for pgml version ${{ steps.version.outputs.version }} for arch ${{ steps.arch.outputs.arch }}. This release is not intended for public use.
        env:
          GITHUB_TOKEN: ${{ secrets.GHA_CREATE_RELEASE_PAT }}

      - name: Retrieve GitHub Release Upload URL
        id: upload_url
        run: echo UPLOAD_URL=$(curl --silent https://api.github.com/repos/paradedb/third-party-pg_extensions/releases/latest | jq .upload_url --raw-output) >> $GITHUB_OUTPUT

      - name: Upload pgml .deb to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHA_CREATE_RELEASE_PAT }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./pgml-extension/pgml-${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ steps.arch.outputs.arch }}-linux-gnu.deb
          asset_name: pgml-v${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ steps.arch.outputs.arch }}-linux-gnu.deb
          asset_content_type: application/vnd.DEBIAN.binary-package
