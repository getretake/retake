# workflows/lint-rust.yml
#
# Rust: Linting
# Lint Rust files using Clippy and Rustfmt.

name: Linting

on:
  pull_request:
    paths:
      - "**/*.rs"
      - ".github/workflows/lint-rust.yml"
  workflow_dispatch:

concurrency:
  group: lint-rust-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint-rust:
    name: Lint Rust Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3
        id: cache-cargo
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
          key: ${{ runner.os }}-cargo-pgrx-0.9.8
          restore-keys: |
            ${{ runner.os }}-cargo-pgrx-0.9.8
            ${{ runner.os }}-cargo-pgrx
            ${{ runner.os }}-cargo

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy,rustfmt
          cache: false # We cache the dependencies ourselves

      - name: Install & Configure Supported PostgreSQL Version
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt-get update && sudo apt-get install -y postgresql-15 postgresql-server-dev-15

      - name: Install pgrx
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: cargo install cargo-pgrx --version 0.9.8

      - name: Initialize pgrx for Current PostgreSQL Version
        run: cargo pgrx init --pg15=/usr/lib/postgresql/15/bin/pg_config

      - name: Run Rustfmt
        run: find . -name "*.rs" | xargs rustfmt --check

      - name: Run Clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
