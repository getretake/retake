# workflows/benchmark-pg_search.yml
#
# Benchmark pg_search
# Benchmark pg_search performance on a nightly basis. This workflow can also be triggered
# manually to benchmark other systems on one-off basis, to compare against pg_search.

name: Benchmark pg_search

on:
  schedule:
    - cron: "1 0 * * 1,2,3,4,5" # Run once per day on weekdays (days of the week 1-5) at 00:01 UTC
  pull_request:
    branches:
      - dev
      - staging
      - main
    paths:
      - "docker/Dockerfile"
      - "pg_search/Cargo.toml"
      - "pg_search/benchmarks/**"
      - "shared/Cargo.toml"
      - "tokenizers/Cargo.toml"
      - ".github/workflows/benchmark-pg_search.yml"
  workflow_dispatch:

concurrency:
  group: benchmark-pg_search-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  benchmark-pg_search:
    name: Benchmark pg_search
    runs-on: ubuntu-latest-m # Size: 4-cores · 16 GB RAM · 150 GB SSD
    env:
      pg_version: 16

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Install & Configure Supported PostgreSQL Version
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt-get update && sudo apt-get install -y postgresql-${{ env.pg_version }} postgresql-server-dev-${{ env.pg_version }}
          sudo chown -R $(whoami) /usr/share/postgresql/${{ env.pg_version }}/extension/ /usr/lib/postgresql/${{ env.pg_version }}/lib/ /var/lib/postgresql/${{ env.pg_version }}/ /usr/lib/postgresql/${{ env.pg_version }}/bin/
          echo "/usr/lib/postgresql/${{ env.pg_version }}/bin" >> $GITHUB_PATH

      - name: Install pgrx, pg_search
        working-directory: pg_search/
        run: |
          cargo install -j $(nproc) --locked cargo-pgrx --version 0.11.3
          cargo pgrx init --pg${{ env.pg_version }}=/usr/lib/postgresql/${{ env.pg_version }}/bin/pg_config
          cargo pgrx install

      - name: Add pg_search to shared_preload_libraries
        working-directory: /home/runner/.pgrx/data-${{ env.pg_version }}/
        run: sed -i "s/^#shared_preload_libraries = .*/shared_preload_libraries = 'pg_search' "postgresql.conf"

      - name: Install the ParadeDB Benchmarking Tool
        working-directory: cargo-paradedb/
        run: cargo run install

      # First start Postgres
      - name: Run pg_search Benchmark
        working-directory: pg_search/
        run: |
          cargo pgrx start
          rustup update
          rustup default stable
          export PATH="$HOME/.cargo/bin:$PATH"
          cargo paradedb bench eslogs generate --url postgresql://localhost:288${{ env.pg_version }}/postgres
          cargo paradedb bench eslogs build-search-index --url postgresql://localhost:288${{ env.pg_version }}/postgres
          cargo paradedb bench eslogs query-search-index --url postgresql://localhost:288${{ env.pg_version }}/postgres

      - name: Notify Slack on Failure
        if: failure() && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main')
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Benchmark pg_search Workflow failed -- investigate immediately!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
