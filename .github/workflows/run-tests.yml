name: "Run tests"

on:
  pull_request:
    branches: [dev, staging, main]
    paths:
      - "core/**"
      - "retake/**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}




      # Based on https://www.cloudbooklet.com/how-to-set-up-deep-learning-architecture-on-ubuntu-22-04/#install-cuda-toolkit-and-cu-dnn
      - name: Install CUDA, cuDNN & NCCL
        run: |
          # Install CUDA (we need 11.7 for our tests)
          # See here: https://developer.nvidia.com/cuda-11-7-0-download-archive?target_os=Linux&target_arch=x86_64&Distribution=Ubuntu&target_version=22.04&target_type=deb_network
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
          sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub
          sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/ /"
          sudo apt-get update
          sudo apt-get -y install cuda
          echo $(nvcc --version)

          # Install cuDNN
          # The CUDNN package is initially downloaded from https://developer.nvidia.com/rdp/cudnn-archive, which requires a login to Nvidia Developer Program
          wget -q https://retake-ci-assets.s3.amazonaws.com/cudnn-linux-x86_64-8.9.2.26_cuda12-archive.tar.xz
          tar -xf cudnn-linux-x86_64-8.9.2.26_cuda12-archive.tar.xz
          cd cudnn-linux-x86_64-8.9.2.26_cuda12-archive
          
          sudo cp include/cudnn.h /usr/lib/cuda/include
          sudo cp lib/libcudnn* /usr/lib/cuda/lib64
          sudo chmod a+r /usr/lib/cuda/include/cudnn.h /usr/lib/cuda/lib64/libcudnn*



          # Install NCCL
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.0-1_all.deb
          sudo dpkg -i cuda-keyring_1.0-1_all.deb
          sudo apt-get update
          sudo apt-get -y install libnccl2 libnccl-dev





          
          # locate cudnn | grep /cudnn$



          export LD_LIBRARY_PATH=/usr/lib/cuda/lib64:$LD_LIBRARY_PATH
          
          # export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH


          # sudo ln -s /usr/lib/x86_64-linux-gnu/libcupti.so /usr/lib/cuda/lib64/libcupti.so.11.7




          # cudnn-linux-x86_64-8.9.2.26_cuda12-archive/lib:$LD_LIBRARY_PATH
          # sudo ldconfig
          # ls -l /home/ubuntu/cudnn-linux-x86_64-8.9.2.26_cuda12-archive/lib/libcudnn.so.8

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install

      # Tech Debt: Disable sentence_transformer test in GH actions
      # due to CUDA issue in GH runner
      - name: Run Pytest
        run: |
          export LD_LIBRARY_PATH=/home/ubuntu/cudnn-linux-x86_64-8.9.2.26_cuda12-archive/lib:$LD_LIBRARY_PATH


          poetry run pytest --ignore=core/transform/tests/test_sentence_transformers.py
